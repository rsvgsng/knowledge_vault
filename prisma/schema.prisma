// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(cuid())
  name       String?
  username   String?      @unique
  email      String?      @unique
  password   String?
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Repository Repository[]
  logs       logs[]
  issue      issue[]
  comment    comment[]
}

model Repository {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  language    String
  files       Files[]
  user        User     @relation(fields: [userId], references: [id])
  issue       issue[]
}

model Files {
  Repository   Repository? @relation(fields: [repositoryId], references: [id])
  repositoryId String?
  name         String
  path         String
  size         Int
  description  String?
  type         String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  id           String      @id @default(cuid())
}

model logs {
  id          String   @id @default(cuid())
  description String?
  createdAt   DateTime @default(now())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
}

model issue {
  id           String     @id @default(cuid())
  repositoryId String
  title        String
  description  String?
  status       String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  issueType    issueType
  userId       String
  user         User       @relation(fields: [userId], references: [id])
  repository   Repository @relation(fields: [repositoryId], references: [id])
  comment      comment[]
}

model comment {
  id          String   @id @default(cuid())
  description String?
  createdAt   DateTime @default(now())
  userId      String
  issueId     String
  user        User     @relation(fields: [userId], references: [id])
  issue       issue    @relation(fields: [issueId], references: [id])
}

enum issueType {
  BUG
  FEATURE
  ENHANCEMENT
  TASK
  IMPROVEMENT
}
